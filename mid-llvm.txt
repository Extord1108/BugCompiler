declare i32 @getch()
declare i32 @parallel_start()
declare i32 @getfarray(float* )
declare void @putint(i32 )
declare void @putfarray(i32 , float* )
declare void @starttime(i32 )
declare void @stoptime(i32 )
declare i32 @getarray(i32* )
declare void @memset(i32* , i32 , i32 )
declare i32 @getint()
declare void @putarray(i32 , i32* )
declare void @putfloat(float )
declare void @putch(i32 )
declare float @getfloat()
declare void @parallel_end(i32 )
define dso_local i32 @main() 
{
b14:
	%r40 = call i32 @ifElseIf()
	call void @putint(i32 %r40)
	ret i32 0
}
define dso_local i32 @ifElseIf() 
{
b1:
	%r5 = icmp eq i32 5, 6
	br i1 %r5, label %b2, label %b5
b2:
	ret i32 5
b3:
	%r14 = icmp eq i32 10, 10
	br i1 %r14, label %b9, label %b7
b4:
	ret i32 %r43
b5:
	%r8 = icmp eq i32 10, 11
	br i1 %r8, label %b2, label %b3
b6:
	br label %b8
b7:
	%r22 = icmp eq i32 10, 10
	br i1 %r22, label %b13, label %b11
b8:
	%r43 = phi i32 [ 25 , %b6 ], [ %r44 , %b12 ]
	br label %b4
b9:
	%r17 = icmp eq i32 5, 1
	br i1 %r17, label %b6, label %b7
b10:
	%r29 = add i32 5, 15
	br label %b12
b11:
	%r33 = sub i32 0, 5
	br label %b12
b12:
	%r44 = phi i32 [ %r29 , %b10 ], [ %r33 , %b11 ]
	br label %b8
b13:
	%r25 = sub i32 0, 5
	%r26 = icmp eq i32 5, %r25
	br i1 %r26, label %b10, label %b11
}
