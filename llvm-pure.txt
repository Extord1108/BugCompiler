declare i32 @getch()
declare i32 @getfarray(float* )
declare void @putint(i32 )
declare void @putfarray(i32 , float* )
declare void @starttime(i32 )
declare void @stoptime(i32 )
declare i32 @getarray(i32* )
declare void @memset(i32* , i32 , i32 )
declare i32 @getint()
declare void @putarray(i32 , i32* )
declare void @putfloat(float )
declare void @putch(i32 )
declare float @getfloat()
declare void @_sysy_starttime(i32 )
declare void @_sysy_stoptime(i32 )
define dso_local i32 @main() 
{
b11:
	%r29 = call i32 @whileIf()
	ret i32 %r29
}
define dso_local i32 @whileIf() 
{
b1:
	%r2 = alloca i32
	%r0 = alloca i32
	store i32 0, i32* %r0
	store i32 0, i32* %r2
	br label %b2
b2:
	%r5 = load i32, i32* %r0
	%r6 = icmp slt i32 %r5, 100
	br i1 %r6, label %b3, label %b4
b3:
	%r8 = load i32, i32* %r0
	%r9 = icmp eq i32 %r8, 5
	br i1 %r9, label %b5, label %b6
b4:
	%r27 = load i32, i32* %r2
	ret i32 %r27
b5:
	store i32 25, i32* %r2
	br label %b7
b6:
	%r13 = load i32, i32* %r0
	%r14 = icmp eq i32 %r13, 10
	br i1 %r14, label %b8, label %b9
b7:
	%r23 = load i32, i32* %r0
	%r24 = add i32 %r23, 1
	store i32 %r24, i32* %r0
	br label %b2
b8:
	store i32 42, i32* %r2
	br label %b10
b9:
	%r18 = load i32, i32* %r0
	%r19 = mul i32 %r18, 2
	store i32 %r19, i32* %r2
	br label %b10
b10:
	br label %b7
}
