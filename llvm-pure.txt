declare i32 @getch()
declare i32 @parallel_start()
declare i32 @getfarray(float* )
declare void @putint(i32 )
declare void @putfarray(i32 , float* )
declare void @starttime(i32 )
declare void @stoptime(i32 )
declare i32 @getarray(i32* )
declare void @memset(i32* , i32 , i32 )
declare i32 @getint()
declare void @putarray(i32 , i32* )
declare void @putfloat(float )
declare void @putch(i32 )
declare float @getfloat()
declare void @parallel_end(i32 )
define dso_local i32 @main() 
{
b14:
	%r57 = call i32 @FourWhile()
	ret i32 %r57
}
define dso_local i32 @FourWhile() 
{
b1:
	%r6 = alloca i32
	%r3 = alloca i32
	%r2 = alloca i32
	%r0 = alloca i32
	store i32 5, i32* %r0
	store i32 6, i32* %r2
	store i32 7, i32* %r3
	store i32 10, i32* %r6
	br label %b2
b2:
	%r9 = load i32, i32* %r0
	%r10 = icmp slt i32 %r9, 20
	br i1 %r10, label %b3, label %b4
b3:
	%r12 = load i32, i32* %r0
	%r13 = add i32 %r12, 3
	store i32 %r13, i32* %r0
	br label %b5
b4:
	%r49 = load i32, i32* %r0
	%r50 = load i32, i32* %r2
	%r51 = load i32, i32* %r6
	%r52 = add i32 %r50, %r51
	%r53 = add i32 %r49, %r52
	%r54 = load i32, i32* %r3
	%r55 = add i32 %r53, %r54
	ret i32 %r55
b5:
	%r16 = load i32, i32* %r2
	%r17 = icmp slt i32 %r16, 10
	br i1 %r17, label %b6, label %b7
b6:
	%r19 = load i32, i32* %r2
	%r20 = add i32 %r19, 1
	store i32 %r20, i32* %r2
	br label %b8
b7:
	%r45 = load i32, i32* %r2
	%r46 = sub i32 %r45, 2
	store i32 %r46, i32* %r2
	br label %b2
b8:
	%r23 = load i32, i32* %r3
	%r24 = icmp eq i32 %r23, 7
	br i1 %r24, label %b9, label %b10
b9:
	%r26 = load i32, i32* %r3
	%r27 = sub i32 %r26, 1
	store i32 %r27, i32* %r3
	br label %b11
b10:
	%r41 = load i32, i32* %r3
	%r42 = add i32 %r41, 1
	store i32 %r42, i32* %r3
	br label %b5
b11:
	%r30 = load i32, i32* %r6
	%r31 = icmp slt i32 %r30, 20
	br i1 %r31, label %b12, label %b13
b12:
	%r33 = load i32, i32* %r6
	%r34 = add i32 %r33, 3
	store i32 %r34, i32* %r6
	br label %b11
b13:
	%r37 = load i32, i32* %r6
	%r38 = sub i32 %r37, 1
	store i32 %r38, i32* %r6
	br label %b8
}
