@a = dso_local global i32 7
declare i32 @getch()
declare i32 @parallel_start()
declare i32 @getfarray(float* )
declare void @putint(i32 )
declare void @putfarray(i32 , float* )
declare void @starttime(i32 )
declare void @stoptime(i32 )
declare i32 @getarray(i32* )
declare void @memset(i32* , i32 , i32 )
declare i32 @getint()
declare void @putarray(i32 , i32* )
declare void @putfloat(float )
declare void @putch(i32 )
declare float @getfloat()
declare void @parallel_end(i32 )
define dso_local i32 @main() 
{
b5:
	%r19 = alloca i32
	%r17 = alloca i32
	store i32 0, i32* %r17
	store i32 0, i32* %r19
	br label %b6
b6:
	%r22 = load i32, i32* %r19
	%r23 = icmp slt i32 %r22, 100
	br i1 %r23, label %b7, label %b8
b7:
	%r25 = call i32 @func()
	%r26 = icmp eq i32 %r25, 1
	br i1 %r26, label %b9, label %b10
b8:
	%r36 = load i32, i32* %r17
	%r37 = icmp slt i32 %r36, 100
	br i1 %r37, label %b11, label %b12
b9:
	%r28 = load i32, i32* %r17
	%r29 = add i32 %r28, 1
	store i32 %r29, i32* %r17
	br label %b10
b10:
	%r32 = load i32, i32* %r19
	%r33 = add i32 %r32, 1
	store i32 %r33, i32* %r19
	br label %b6
b11:
	call void @putint(i32 1)
	br label %b13
b12:
	call void @putint(i32 0)
	br label %b13
b13:
	ret i32 0
}
define dso_local i32 @func() 
{
b1:
	%r3 = alloca i32
	%r1 = alloca i32
	%r0 = load i32, i32* @a
	store i32 %r0, i32* %r1
	store i32 1, i32* %r3
	%r5 = load i32, i32* %r3
	%r6 = load i32, i32* %r1
	%r7 = icmp eq i32 %r5, %r6
	br i1 %r7, label %b2, label %b3
b2:
	%r9 = load i32, i32* %r3
	%r10 = add i32 %r9, 1
	store i32 %r10, i32* %r3
	ret i32 1
b3:
	ret i32 0
b4:
	ret i32 0
}
