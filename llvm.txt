declare i32 @getch()
declare i32 @parallel_start()
declare i32 @getfarray(float* )
declare void @putint(i32 )
declare void @putfarray(i32 , float* )
declare void @starttime(i32 )
declare void @stoptime(i32 )
declare i32 @getarray(i32* )
declare void @memset(i32* , i32 , i32 )
declare i32 @getint()
declare void @putarray(i32 , i32* )
declare void @putfloat(float )
declare void @putch(i32 )
declare float @getfloat()
declare void @parallel_end(i32 )
define dso_local i32 @main() 
{
b2:
	%r17 = alloca i32
	%r8 = alloca i32
	%r7 = call i32 @getint()
	store i32 %r7, i32* %r8
	%r10 = load i32, i32* %r8
	%r11 = sitofp i32 %r10 to float
	%r12 = fcmp ogt float 0x0, %r11
	br i1 %r12, label %b3, label %b4
b3:
	%r14 = load i32, i32* %r8
	%r15 = sitofp i32 %r14 to float
	%r16 = fmul float %r15, 0x40d5b4c5c0000000
	%r18 = fptosi float %r16 to i32
	store i32 %r18, i32* %r17
	%r20 = load i32, i32* %r17
	call void @putint(i32 %r20)
	br label %b4
b4:
	ret i32 0
}
define dso_local i32 @sb([3 x i32]* %f0) 
{
b1:
	%r1 = alloca [3 x i32]*
	store [3 x i32]* %f0, [3 x i32]** %r1
	%r3 = load [3 x i32]*, [3 x i32]** %r1
	%r4 = getelementptr inbounds [3 x i32], [3 x i32]* %r3, i32 0, i32 1
	%r5 = load i32, i32* %r4
	ret i32 %r5
}
