@M = dso_local global i32 0
@L = dso_local global i32 0
@N = dso_local global i32 0
declare i32 @getch()
declare i32 @parallel_start()
declare i32 @getfarray(float* )
declare void @putint(i32 )
declare void @putfarray(i32 , float* )
declare void @starttime(i32 )
declare void @stoptime(i32 )
declare i32 @getarray(i32* )
declare void @memset(i32* , i32 , i32 )
declare i32 @getint()
declare void @putarray(i32 , i32* )
declare void @putfloat(float )
declare void @putch(i32 )
declare float @getfloat()
declare void @parallel_end(i32 )
define dso_local i32 @add(float* %f0, float* %f1, float* %f2, float* %f3, float* %f4, float* %f5, float* %f6, float* %f7, float* %f8) 
{
b1:
	move i32 %r203<- 0
	br label %b2
b2:
	%r31 = load i32, i32* @M
	%r32 = icmp slt i32 %r203, %r31
	br i1 %r32, label %b3, label %b4
b3:
	%r36 = getelementptr inbounds float, float* %f6, i32 %r203
	%r39 = getelementptr inbounds float, float* %f0, i32 %r203
	%r40 = load float, float* %r39
	%r43 = getelementptr inbounds float, float* %f3, i32 %r203
	%r44 = load float, float* %r43
	%r45 = fadd float %r40, %r44
	store float %r45, float* %r36
	%r49 = getelementptr inbounds float, float* %f7, i32 %r203
	%r52 = getelementptr inbounds float, float* %f1, i32 %r203
	%r53 = load float, float* %r52
	%r56 = getelementptr inbounds float, float* %f4, i32 %r203
	%r57 = load float, float* %r56
	%r58 = fadd float %r53, %r57
	store float %r58, float* %r49
	%r62 = getelementptr inbounds float, float* %f8, i32 %r203
	%r65 = getelementptr inbounds float, float* %f2, i32 %r203
	%r66 = load float, float* %r65
	%r69 = getelementptr inbounds float, float* %f5, i32 %r203
	%r70 = load float, float* %r69
	%r71 = fadd float %r66, %r70
	store float %r71, float* %r62
	%r74 = add i32 %r203, 1
	move i32 %r203<- %r74
	br label %b2
b4:
	ret i32 0
}
define dso_local i32 @main() 
{
b5:
	%r89 = alloca [3 x float]
	%r88 = alloca [3 x float]
	%r87 = alloca [6 x float]
	%r86 = alloca [3 x float]
	%r85 = alloca [3 x float]
	%r84 = alloca [3 x float]
	%r83 = alloca [3 x float]
	%r82 = alloca [3 x float]
	%r81 = alloca [3 x float]
	store i32 3, i32* @N
	store i32 3, i32* @M
	store i32 3, i32* @L
	move i32 %r209<- 0
	br label %b6
b6:
	%r94 = load i32, i32* @M
	%r95 = icmp slt i32 %r209, %r94
	br i1 %r95, label %b7, label %b8
b7:
	%r98 = getelementptr inbounds [3 x float], [3 x float]* %r81, i32 0, i32 %r209
	%r100 = sitofp i32 %r209 to float
	store float %r100, float* %r98
	%r103 = getelementptr inbounds [3 x float], [3 x float]* %r82, i32 0, i32 %r209
	%r105 = sitofp i32 %r209 to float
	store float %r105, float* %r103
	%r108 = getelementptr inbounds [3 x float], [3 x float]* %r83, i32 0, i32 %r209
	%r110 = sitofp i32 %r209 to float
	store float %r110, float* %r108
	%r113 = getelementptr inbounds [3 x float], [3 x float]* %r84, i32 0, i32 %r209
	%r115 = sitofp i32 %r209 to float
	store float %r115, float* %r113
	%r118 = getelementptr inbounds [3 x float], [3 x float]* %r85, i32 0, i32 %r209
	%r120 = sitofp i32 %r209 to float
	store float %r120, float* %r118
	%r123 = getelementptr inbounds [3 x float], [3 x float]* %r86, i32 0, i32 %r209
	%r125 = sitofp i32 %r209 to float
	store float %r125, float* %r123
	%r128 = add i32 %r209, 1
	move i32 %r209<- %r128
	br label %b6
b8:
	%r131 = getelementptr inbounds [3 x float], [3 x float]* %r81, i32 0, i32 0
	%r132 = getelementptr inbounds [3 x float], [3 x float]* %r82, i32 0, i32 0
	%r133 = getelementptr inbounds [3 x float], [3 x float]* %r83, i32 0, i32 0
	%r134 = getelementptr inbounds [3 x float], [3 x float]* %r84, i32 0, i32 0
	%r135 = getelementptr inbounds [3 x float], [3 x float]* %r85, i32 0, i32 0
	%r136 = getelementptr inbounds [3 x float], [3 x float]* %r86, i32 0, i32 0
	%r137 = getelementptr inbounds [6 x float], [6 x float]* %r87, i32 0, i32 0
	%r138 = getelementptr inbounds [3 x float], [3 x float]* %r88, i32 0, i32 0
	%r139 = getelementptr inbounds [3 x float], [3 x float]* %r89, i32 0, i32 0
	%r140 = call i32 @add(float* %r131, float* %r132, float* %r133, float* %r134, float* %r135, float* %r136, float* %r137, float* %r138, float* %r139)
	move i32 %r208<- %r140
	br label %b9
b9:
	%r145 = load i32, i32* @N
	%r146 = icmp slt i32 %r208, %r145
	br i1 %r146, label %b10, label %b11
b10:
	%r149 = getelementptr inbounds [6 x float], [6 x float]* %r87, i32 0, i32 %r208
	%r150 = load float, float* %r149
	%r151 = fptosi float %r150 to i32
	call void @putint(i32 %r151)
	%r156 = add i32 %r208, 1
	move i32 %r208<- %r156
	move i32 %r205<- %r151
	br label %b9
b11:
	call void @putch(i32 10)
	move i32 %r210<- 0
	move i32 %r206<- 10
	br label %b12
b12:
	%r165 = load i32, i32* @N
	%r166 = icmp slt i32 %r210, %r165
	br i1 %r166, label %b13, label %b14
b13:
	%r169 = getelementptr inbounds [3 x float], [3 x float]* %r88, i32 0, i32 %r210
	%r170 = load float, float* %r169
	%r171 = fptosi float %r170 to i32
	call void @putint(i32 %r171)
	%r176 = add i32 %r210, 1
	move i32 %r210<- %r176
	move i32 %r206<- %r171
	br label %b12
b14:
	call void @putch(i32 10)
	move i32 %r207<- 0
	move i32 %r204<- 10
	br label %b15
b15:
	%r185 = load i32, i32* @N
	%r186 = icmp slt i32 %r207, %r185
	br i1 %r186, label %b16, label %b17
b16:
	%r189 = getelementptr inbounds [3 x float], [3 x float]* %r89, i32 0, i32 %r207
	%r190 = load float, float* %r189
	%r191 = fptosi float %r190 to i32
	call void @putint(i32 %r191)
	%r196 = add i32 %r207, 1
	move i32 %r207<- %r196
	move i32 %r204<- %r191
	br label %b15
b17:
	call void @putch(i32 10)
	ret i32 0
}
