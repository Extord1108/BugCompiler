@a = dso_local global i32 0
@b = dso_local global i32 0
@d = dso_local global i32 0
declare i32 @getch()
declare i32 @parallel_start()
declare i32 @getfarray(float* )
declare void @putint(i32 )
declare void @putfarray(i32 , float* )
declare void @starttime(i32 )
declare void @stoptime(i32 )
declare i32 @getarray(i32* )
declare void @memset(i32* , i32 , i32 )
declare i32 @getint()
declare void @putarray(i32 , i32* )
declare void @putfloat(float )
declare void @putch(i32 )
declare float @getfloat()
declare void @parallel_end(i32 )
define dso_local i32 @set_a(i32 %f0) 
{
b1:
	%r1 = alloca i32
	store i32 %f0, i32* %r1
	%r3 = load i32, i32* %r1
	store i32 %r3, i32* @a
	%r5 = load i32, i32* @a
	ret i32 %r5
}
define dso_local i32 @set_b(i32 %f7) 
{
b2:
	%r8 = alloca i32
	store i32 %f7, i32* %r8
	%r10 = load i32, i32* %r8
	store i32 %r10, i32* @b
	%r12 = load i32, i32* @b
	ret i32 %r12
}
define dso_local i32 @set_d(i32 %f14) 
{
b3:
	%r15 = alloca i32
	store i32 %f14, i32* %r15
	%r17 = load i32, i32* %r15
	store i32 %r17, i32* @d
	%r19 = load i32, i32* @d
	ret i32 %r19
}
define dso_local i32 @main() 
{
b4:
	%r21 = icmp slt i32 1, 8
	%r22 = srem i32 7, 2
	%r23 = zext i1 %r21 to i32
	%r24 = icmp ne i32 %r23, %r22
	br i1 %r24, label %b5, label %b6
b5:
	call void @putch(i32 67)
	br label %b6
b6:
	ret i32 0
}
