@n = dso_local global i32 0
declare i32 @getch()
declare i32 @parallel_start()
declare i32 @getfarray(float* )
declare void @putint(i32 )
declare void @putfarray(i32 , float* )
declare void @starttime(i32 )
declare void @stoptime(i32 )
declare i32 @getarray(i32* )
declare void @memset(i32* , i32 , i32 )
declare i32 @getint()
declare void @putarray(i32 , i32* )
declare void @putfloat(float )
declare void @putch(i32 )
declare float @getfloat()
declare void @parallel_end(i32 )
define dso_local i32 @swap(i32* %f0, i32 %f1, i32 %f2) 
{
b1:
	%r12 = getelementptr inbounds i32, i32* %f0, i32 %f1
	%r13 = load i32, i32* %r12
	%r17 = getelementptr inbounds i32, i32* %f0, i32 %f1
	%r20 = getelementptr inbounds i32, i32* %f0, i32 %f2
	%r21 = load i32, i32* %r20
	store i32 %r21, i32* %r17
	%r25 = getelementptr inbounds i32, i32* %f0, i32 %f2
	store i32 %r13, i32* %r25
	ret i32 0
}
define dso_local i32 @main() 
{
b22:
	%r185 = alloca [10 x i32]
	store i32 10, i32* @n
	%r186 = getelementptr inbounds [10 x i32], [10 x i32]* %r185, i32 0, i32 0
	store i32 4, i32* %r186
	%r188 = getelementptr inbounds [10 x i32], [10 x i32]* %r185, i32 0, i32 1
	store i32 3, i32* %r188
	%r190 = getelementptr inbounds [10 x i32], [10 x i32]* %r185, i32 0, i32 2
	store i32 9, i32* %r190
	%r192 = getelementptr inbounds [10 x i32], [10 x i32]* %r185, i32 0, i32 3
	store i32 2, i32* %r192
	%r194 = getelementptr inbounds [10 x i32], [10 x i32]* %r185, i32 0, i32 4
	store i32 0, i32* %r194
	%r196 = getelementptr inbounds [10 x i32], [10 x i32]* %r185, i32 0, i32 5
	store i32 1, i32* %r196
	%r198 = getelementptr inbounds [10 x i32], [10 x i32]* %r185, i32 0, i32 6
	store i32 6, i32* %r198
	%r200 = getelementptr inbounds [10 x i32], [10 x i32]* %r185, i32 0, i32 7
	store i32 5, i32* %r200
	%r202 = getelementptr inbounds [10 x i32], [10 x i32]* %r185, i32 0, i32 8
	store i32 7, i32* %r202
	%r204 = getelementptr inbounds [10 x i32], [10 x i32]* %r185, i32 0, i32 9
	store i32 8, i32* %r204
	%r208 = getelementptr inbounds [10 x i32], [10 x i32]* %r185, i32 0, i32 0
	%r209 = load i32, i32* @n
	%r210 = call i32 @heap_sort(i32* %r208, i32 %r209)
	move i32 %r232<- %r210
	br label %b23
b23:
	%r214 = load i32, i32* @n
	%r215 = icmp slt i32 %r232, %r214
	br i1 %r215, label %b24, label %b25
b24:
	%r219 = getelementptr inbounds [10 x i32], [10 x i32]* %r185, i32 0, i32 %r232
	%r220 = load i32, i32* %r219
	call void @putint(i32 %r220)
	call void @putch(i32 10)
	%r228 = add i32 %r232, 1
	move i32 %r232<- %r228
	br label %b23
b25:
	ret i32 0
}
define dso_local i32 @heap_ajust(i32* %f29, i32 %f30, i32 %f31) 
{
b2:
	%r43 = mul i32 %f30, 2
	%r44 = add i32 %r43, 1
	move i32 %r235<- %f30
	move i32 %r234<- %r44
	br label %b3
b3:
	%r49 = add i32 %f31, 1
	%r50 = icmp slt i32 %r234, %r49
	br i1 %r50, label %b4, label %b5
b4:
	%r54 = icmp slt i32 %r234, %f31
	br i1 %r54, label %b8, label %b26
b5:
	ret i32 0
b6:
	%r68 = add i32 %r234, 1
	move i32 %r233<- %r68
	br label %b7
b7:
	%r73 = getelementptr inbounds i32, i32* %f29, i32 %r235
	%r74 = load i32, i32* %r73
	%r77 = getelementptr inbounds i32, i32* %f29, i32 %r233
	%r78 = load i32, i32* %r77
	%r79 = icmp sgt i32 %r74, %r78
	br i1 %r79, label %b9, label %b10
b8:
	%r58 = getelementptr inbounds i32, i32* %f29, i32 %r234
	%r59 = load i32, i32* %r58
	%r61 = add i32 %r234, 1
	%r63 = getelementptr inbounds i32, i32* %f29, i32 %r61
	%r64 = load i32, i32* %r63
	%r65 = icmp slt i32 %r59, %r64
	br i1 %r65, label %b6, label %b27
b9:
	ret i32 0
b10:
	%r86 = call i32 @swap(i32* %f29, i32 %r235, i32 %r233)
	%r91 = mul i32 %r233, 2
	%r92 = add i32 %r91, 1
	br label %b11
b11:
	move i32 %r235<- %r233
	move i32 %r234<- %r92
	br label %b3
b26:
	move i32 %r233<- %r234
	br label %b7
b27:
	move i32 %r233<- %r234
	br label %b7
}
define dso_local i32 @heap_sort(i32* %f97, i32 %f98) 
{
b12:
	%r106 = sdiv i32 %f98, 2
	%r107 = sub i32 %r106, 1
	call void @putint(i32 %r107)
	move i32 %r240<- %r107
	br label %b13
b13:
	%r113 = sub i32 0, 1
	%r114 = icmp sgt i32 %r240, %r113
	br i1 %r114, label %b14, label %b15
b14:
	%r117 = sub i32 %f98, 1
	call void @putint(i32 %r240)
	call void @putch(i32 32)
	call void @putint(i32 %r117)
	call void @putch(i32 10)
	%r128 = call i32 @heap_ajust(i32* %f97, i32 %r240, i32 %r117)
	move i32 %r237<- 0
	br label %b16
b15:
	%r158 = sub i32 %f98, 1
	move i32 %r241<- %r158
	move i32 %r239<- %r238
	br label %b19
b16:
	%r135 = icmp slt i32 %r237, %f98
	br i1 %r135, label %b17, label %b18
b17:
	%r140 = getelementptr inbounds i32, i32* %f97, i32 %r237
	%r141 = load i32, i32* %r140
	call void @putint(i32 %r141)
	call void @putch(i32 32)
	%r149 = add i32 %r237, 1
	move i32 %r237<- %r149
	br label %b16
b18:
	call void @putch(i32 10)
	%r154 = sub i32 %r240, 1
	move i32 %r240<- %r154
	move i32 %r238<- %r128
	move i32 %r236<- %r237
	br label %b13
b19:
	%r162 = icmp sgt i32 %r241, 0
	br i1 %r162, label %b20, label %b21
b20:
	%r169 = call i32 @swap(i32* %f97, i32 0, i32 %r241)
	%r172 = sub i32 %r241, 1
	%r177 = call i32 @heap_ajust(i32* %f97, i32 0, i32 %r172)
	%r180 = sub i32 %r241, 1
	move i32 %r241<- %r180
	move i32 %r239<- %r177
	br label %b19
b21:
	ret i32 0
}
