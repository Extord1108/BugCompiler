declare i32 @getch()
declare i32 @parallel_start()
declare i32 @getfarray(float* )
declare void @putint(i32 )
declare void @putfarray(i32 , float* )
declare void @starttime(i32 )
declare void @stoptime(i32 )
declare i32 @getarray(i32* )
declare void @memset(i32* , i32 , i32 )
declare i32 @getint()
declare void @putarray(i32 , i32* )
declare void @putfloat(float )
declare void @putch(i32 )
declare float @getfloat()
declare void @parallel_end(i32 )
define dso_local i32 @main() 
{
b14:
	%r40 = call i32 @ifElseIf()
	call void @putint(i32 %r40)
	ret i32 0
}
define dso_local i32 @ifElseIf() 
{
b1:
	%r2 = alloca i32
	%r0 = alloca i32
	store i32 5, i32* %r0
	store i32 10, i32* %r2
	%r4 = load i32, i32* %r0
	%r5 = load i32, i32* %r2
	%r6 = icmp eq i32 %r4, 6
	br i1 %r6, label %b2, label %b5
b2:
	%r10 = load i32, i32* %r0
	ret i32 %r10
	br label %b4
b3:
	%r13 = load i32, i32* %r2
	%r14 = load i32, i32* %r0
	%r15 = icmp eq i32 %r13, 10
	br i1 %r15, label %b9, label %b7
b4:
	%r38 = load i32, i32* %r0
	ret i32 %r38
b5:
	%r8 = icmp eq i32 %r5, 11
	br i1 %r8, label %b2, label %b3
b6:
	store i32 25, i32* %r0
	br label %b8
b7:
	%r21 = load i32, i32* %r2
	%r22 = load i32, i32* %r0
	%r23 = icmp eq i32 %r21, 10
	br i1 %r23, label %b13, label %b11
b8:
	br label %b4
b9:
	%r17 = icmp eq i32 %r14, 1
	br i1 %r17, label %b6, label %b7
b10:
	%r28 = load i32, i32* %r0
	%r29 = add i32 %r28, 15
	store i32 %r29, i32* %r0
	br label %b12
b11:
	%r32 = load i32, i32* %r0
	%r33 = sub i32 0, %r32
	store i32 %r33, i32* %r0
	br label %b12
b12:
	br label %b8
b13:
	%r25 = sub i32 0, 5
	%r26 = icmp eq i32 %r22, %r25
	br i1 %r26, label %b10, label %b11
}
