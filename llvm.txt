@x = dso_local global [600 x [600 x [600 x i32]]] zeroinitializer
declare i32 @getch()
declare i32 @getfarray(float* )
declare void @putint(i32 )
declare void @putfarray(i32 , float* )
declare void @_sysy_starttime(i32 )
declare void @_sysy_stoptime(i32 )
declare i32 @getarray(i32* )
declare void @memset(i32* , i32 , i32 )
declare i32 @getint()
declare void @putarray(i32 , i32* )
declare void @putfloat(float )
declare void @putch(i32 )
declare float @getfloat()
declare void @_sysy_starttime(i32 )
declare void @_sysy_stoptime(i32 )
define dso_local i32 @main() 
{
b1:
	%r5 = call i32 @getint()
	%r7 = call i32 @getint()
	call void @_sysy_starttime(i32 13)
	move i32 %r169<- 0
	br label %b2
b2:
	%r16 = icmp slt i32 %r169, %r5
	br i1 %r16, label %b3, label %b4
b3:
	move i32 %r168<- 0
	br label %b5
b4:
	move i32 %r170<- 1
	move i32 %r166<- 1
	br label %b11
b5:
	%r23 = icmp slt i32 %r168, %r5
	br i1 %r23, label %b6, label %b7
b6:
	move i32 %r164<- 0
	br label %b8
b7:
	%r50 = add i32 %r169, 1
	move i32 %r169<- %r50
	br label %b2
b8:
	%r29 = icmp slt i32 %r164, %r5
	br i1 %r29, label %b9, label %b10
b9:
	%r34 = getelementptr inbounds [600 x [600 x [600 x i32]]], [600 x [600 x [600 x i32]]]* @x, i32 0, i32 %r169, i32 %r168, i32 %r164
	store i32 1, i32* %r34
	%r42 = add i32 %r164, 1
	move i32 %r164<- %r42
	br label %b8
b10:
	%r46 = add i32 %r168, 1
	move i32 %r168<- %r46
	br label %b5
b11:
	%r59 = sub i32 %r5, 1
	%r60 = icmp slt i32 %r170, %r59
	br i1 %r60, label %b12, label %b13
b12:
	move i32 %r165<- 1
	br label %b14
b13:
	call void @_sysy_stoptime(i32 53)
	%r139 = getelementptr inbounds [600 x [600 x [600 x i32]]], [600 x [600 x [600 x i32]]]* @x, i32 0, i32 0, i32 0
	%r140 = getelementptr inbounds [600 x i32], [600 x i32]* %r139, i32 0, i32 0
	call void @putarray(i32 %r5, i32* %r140)
	%r144 = sdiv i32 %r5, 2
	%r147 = getelementptr inbounds [600 x [600 x [600 x i32]]], [600 x [600 x [600 x i32]]]* @x, i32 0, i32 %r144, i32 %r144
	%r148 = getelementptr inbounds [600 x i32], [600 x i32]* %r147, i32 0, i32 0
	call void @putarray(i32 %r5, i32* %r148)
	%r152 = sub i32 %r170, 1
	%r154 = sub i32 %r166, 1
	%r155 = getelementptr inbounds [600 x [600 x [600 x i32]]], [600 x [600 x [600 x i32]]]* @x, i32 0, i32 %r152, i32 %r154
	%r156 = getelementptr inbounds [600 x i32], [600 x i32]* %r155, i32 0, i32 0
	call void @putarray(i32 %r5, i32* %r156)
	ret i32 0
b14:
	%r68 = icmp slt i32 %r165, %r59
	br i1 %r68, label %b15, label %b16
b15:
	move i32 %r159<- 1
	br label %b17
b16:
	%r134 = add i32 %r170, 1
	move i32 %r170<- %r134
	move i32 %r166<- %r165
	br label %b11
b17:
	%r75 = icmp slt i32 %r159, %r59
	br i1 %r75, label %b18, label %b19
b18:
	%r80 = getelementptr inbounds [600 x [600 x [600 x i32]]], [600 x [600 x [600 x i32]]]* @x, i32 0, i32 %r170, i32 %r165, i32 %r159
	%r82 = sub i32 %r170, 1
	%r85 = getelementptr inbounds [600 x [600 x [600 x i32]]], [600 x [600 x [600 x i32]]]* @x, i32 0, i32 %r82, i32 %r165, i32 %r159
	%r86 = load i32, i32* %r85
	%r88 = add i32 %r170, 1
	%r91 = getelementptr inbounds [600 x [600 x [600 x i32]]], [600 x [600 x [600 x i32]]]* @x, i32 0, i32 %r88, i32 %r165, i32 %r159
	%r92 = load i32, i32* %r91
	%r93 = add i32 %r86, %r92
	%r96 = sub i32 %r165, 1
	%r98 = getelementptr inbounds [600 x [600 x [600 x i32]]], [600 x [600 x [600 x i32]]]* @x, i32 0, i32 %r170, i32 %r96, i32 %r159
	%r99 = load i32, i32* %r98
	%r100 = add i32 %r93, %r99
	%r103 = add i32 %r165, 1
	%r105 = getelementptr inbounds [600 x [600 x [600 x i32]]], [600 x [600 x [600 x i32]]]* @x, i32 0, i32 %r170, i32 %r103, i32 %r159
	%r106 = load i32, i32* %r105
	%r107 = add i32 %r100, %r106
	%r111 = sub i32 %r159, 1
	%r112 = getelementptr inbounds [600 x [600 x [600 x i32]]], [600 x [600 x [600 x i32]]]* @x, i32 0, i32 %r170, i32 %r165, i32 %r111
	%r113 = load i32, i32* %r112
	%r114 = add i32 %r107, %r113
	%r118 = add i32 %r159, 1
	%r119 = getelementptr inbounds [600 x [600 x [600 x i32]]], [600 x [600 x [600 x i32]]]* @x, i32 0, i32 %r170, i32 %r165, i32 %r118
	%r120 = load i32, i32* %r119
	%r121 = add i32 %r114, %r120
	%r123 = sdiv i32 %r121, %r7
	store i32 %r123, i32* %r80
	move i32 %r159<- %r118
	br label %b17
b19:
	%r130 = add i32 %r165, 1
	move i32 %r165<- %r130
	br label %b14
}
