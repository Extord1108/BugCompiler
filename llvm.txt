@ascii_0 = dso_local global i32 48
declare i32 @getch()
declare i32 @parallel_start()
declare i32 @getfarray(float* )
declare void @putint(i32 )
declare void @putfarray(i32 , float* )
declare void @starttime(i32 )
declare void @stoptime(i32 )
declare i32 @getarray(i32* )
declare void @memset(i32* , i32 , i32 )
declare i32 @getint()
declare void @putarray(i32 , i32* )
declare void @putfloat(float )
declare void @putch(i32 )
declare float @getfloat()
declare void @parallel_end(i32 )
define dso_local i32 @my_getint() 
{
b1:
	br label %b2
b2:
	%r4 = icmp ne i32 1, 0
	br i1 %r4, label %b3, label %b27
b3:
	%r6 = call i32 @getch()
	%r7 = sub i32 %r6, 48
	%r10 = icmp slt i32 %r7, 0
	br i1 %r10, label %b5, label %b8
b4:
	move i32 %r100, %r103
	move i32 %r100, %r101
	br label %b9
b5:
	move i32 %r7, %r99
	br label %b2
b6:
	move i32 %r7, %r100
	br label %b4
b8:
	%r13 = icmp sgt i32 %r7, 9
	br i1 %r13, label %b5, label %b6
b9:
	%r23 = icmp ne i32 1, 0
	br i1 %r23, label %b10, label %b28
b10:
	%r25 = call i32 @getch()
	%r26 = sub i32 %r25, 48
	%r29 = icmp sge i32 %r26, 0
	br i1 %r29, label %b15, label %b13
b11:
	ret i32 %r103
b12:
	%r35 = mul i32 %r103, 10
	%r37 = add i32 %r35, %r26
	br label %b14
b13:
	move i32 %r26, %r102
	br label %b11
b14:
	move i32 %r37, %r103
	move i32 %r26, %r101
	br label %b9
b15:
	%r32 = icmp sle i32 %r26, 9
	br i1 %r32, label %b12, label %b13
b27:
	move i32 %r99, %r100
	br label %b4
b28:
	move i32 %r101, %r102
	br label %b11
}
define dso_local i32 @main() 
{
b23:
	%r81 = call i32 @my_getint()
	move i32 %r81, %r104
	br label %b24
b24:
	%r86 = icmp sgt i32 %r104, 0
	br i1 %r86, label %b25, label %b26
b25:
	%r88 = call i32 @my_getint()
	call void @my_putint(i32 %r88)
	call void @putch(i32 10)
	%r95 = sub i32 %r104, 1
	move i32 %r95, %r104
	br label %b24
b26:
	ret i32 0
}
define dso_local void @my_putint(i32 %f45) 
{
b16:
	%r48 = alloca [16 x i32]
	move i32 %f45, %r107
	move i32 0, %r105
	br label %b17
b17:
	%r53 = icmp sgt i32 %r107, 0
	br i1 %r53, label %b18, label %b19
b18:
	%r56 = getelementptr inbounds [16 x i32], [16 x i32]* %r48, i32 0, i32 %r105
	%r58 = srem i32 %r107, 10
	%r59 = add i32 %r58, 48
	store i32 %r59, i32* %r56
	%r62 = sdiv i32 %r107, 10
	%r65 = add i32 %r105, 1
	move i32 %r62, %r107
	move i32 %r65, %r105
	br label %b17
b19:
	move i32 %r105, %r106
	br label %b20
b20:
	%r70 = icmp sgt i32 %r106, 0
	br i1 %r70, label %b21, label %b22
b21:
	%r73 = sub i32 %r106, 1
	%r76 = getelementptr inbounds [16 x i32], [16 x i32]* %r48, i32 0, i32 %r73
	%r77 = load i32, i32* %r76
	call void @putch(i32 %r77)
	move i32 %r73, %r106
	br label %b20
b22:
	ret void
}
