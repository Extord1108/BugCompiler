@seed = dso_local global [3 x i32] [i32 19971231, i32 19981013, i32 1000000007]
@staticvalue = dso_local global i32 0
@a = dso_local global [10000 x i32] zeroinitializer
declare i32 @getch()
declare i32 @getfarray(float* )
declare void @putint(i32 )
declare void @putfarray(i32 , float* )
declare void @_sysy_starttime(i32 )
declare void @_sysy_stoptime(i32 )
declare i32 @getarray(i32* )
declare void @memset(i32* , i32 , i32 )
declare i32 @getint()
declare void @putarray(i32 , i32* )
declare void @putfloat(float )
declare void @putch(i32 )
declare float @getfloat()
declare void @_sysy_starttime(i32 )
declare void @_sysy_stoptime(i32 )
define dso_local i32 @set(i32* %f0, i32 %f1, i32 %f2) 
{
b1:
	%r11 = alloca [31 x i32]
	%r12 = getelementptr inbounds [31 x i32], [31 x i32]* %r11, i32 0, i32 0
	call void @memset(i32* %r12, i32 0, i32 124)
	store i32 1, i32* %r12
	%r16 = getelementptr inbounds [31 x i32], [31 x i32]* %r11, i32 0, i32 1
	%r18 = load i32, i32* %r12
	%r19 = mul i32 %r18, 2
	store i32 %r19, i32* %r16
	%r21 = getelementptr inbounds [31 x i32], [31 x i32]* %r11, i32 0, i32 2
	%r23 = load i32, i32* %r16
	%r24 = mul i32 %r23, 2
	store i32 %r24, i32* %r21
	%r26 = getelementptr inbounds [31 x i32], [31 x i32]* %r11, i32 0, i32 3
	%r28 = load i32, i32* %r21
	%r29 = mul i32 %r28, 2
	store i32 %r29, i32* %r26
	%r31 = getelementptr inbounds [31 x i32], [31 x i32]* %r11, i32 0, i32 4
	%r33 = load i32, i32* %r26
	%r34 = mul i32 %r33, 2
	store i32 %r34, i32* %r31
	%r36 = getelementptr inbounds [31 x i32], [31 x i32]* %r11, i32 0, i32 5
	%r38 = load i32, i32* %r31
	%r39 = mul i32 %r38, 2
	store i32 %r39, i32* %r36
	%r41 = getelementptr inbounds [31 x i32], [31 x i32]* %r11, i32 0, i32 6
	%r43 = load i32, i32* %r36
	%r44 = mul i32 %r43, 2
	store i32 %r44, i32* %r41
	%r46 = getelementptr inbounds [31 x i32], [31 x i32]* %r11, i32 0, i32 7
	%r48 = load i32, i32* %r41
	%r49 = mul i32 %r48, 2
	store i32 %r49, i32* %r46
	%r51 = getelementptr inbounds [31 x i32], [31 x i32]* %r11, i32 0, i32 8
	%r53 = load i32, i32* %r46
	%r54 = mul i32 %r53, 2
	store i32 %r54, i32* %r51
	%r56 = getelementptr inbounds [31 x i32], [31 x i32]* %r11, i32 0, i32 9
	%r58 = load i32, i32* %r51
	%r59 = mul i32 %r58, 2
	store i32 %r59, i32* %r56
	%r61 = getelementptr inbounds [31 x i32], [31 x i32]* %r11, i32 0, i32 10
	%r63 = load i32, i32* %r56
	%r64 = mul i32 %r63, 2
	store i32 %r64, i32* %r61
	move i32 %r227<- 10
	br label %b2
b2:
	%r70 = icmp slt i32 %r227, 30
	br i1 %r70, label %b3, label %b4
b3:
	%r73 = add i32 %r227, 1
	%r76 = getelementptr inbounds [31 x i32], [31 x i32]* %r11, i32 0, i32 %r73
	%r78 = sub i32 %r73, 1
	%r79 = getelementptr inbounds [31 x i32], [31 x i32]* %r11, i32 0, i32 %r78
	%r80 = load i32, i32* %r79
	%r81 = mul i32 %r80, 2
	store i32 %r81, i32* %r76
	move i32 %r227<- %r73
	br label %b2
b4:
	%r87 = sdiv i32 %f1, 30
	%r88 = icmp sge i32 %r87, 10000
	br i1 %r88, label %b5, label %b6
b5:
	ret i32 0
b6:
	%r95 = getelementptr inbounds i32, i32* %f0, i32 %r87
	%r96 = load i32, i32* %r95
	%r98 = srem i32 %f1, 30
	%r99 = getelementptr inbounds [31 x i32], [31 x i32]* %r11, i32 0, i32 %r98
	%r100 = load i32, i32* %r99
	%r101 = sdiv i32 %r96, %r100
	%r102 = srem i32 %r101, 2
	%r104 = icmp ne i32 %r102, %f2
	br i1 %r104, label %b7, label %b24
b7:
	%r110 = load i32, i32* %r95
	%r114 = load i32, i32* %r99
	%r115 = sdiv i32 %r110, %r114
	%r116 = srem i32 %r115, 2
	%r117 = icmp eq i32 %r116, 0
	br i1 %r117, label %b9, label %b25
b8:
	%r163 = load i32, i32* %r95
	%r165 = add i32 %r163, %r224
	store i32 %r165, i32* %r95
	ret i32 0
b9:
	%r120 = icmp eq i32 %f2, 1
	br i1 %r120, label %b11, label %b26
b10:
	%r133 = load i32, i32* %r95
	%r137 = load i32, i32* %r99
	%r138 = sdiv i32 %r133, %r137
	%r139 = srem i32 %r138, 2
	%r140 = icmp eq i32 %r139, 1
	br i1 %r140, label %b13, label %b27
b11:
	%r125 = load i32, i32* %r99
	move i32 %r225<- %r125
	br label %b12
b12:
	move i32 %r226<- %r225
	br label %b10
b13:
	%r143 = icmp eq i32 %f2, 0
	br i1 %r143, label %b15, label %b28
b14:
	move i32 %r224<- %r223
	br label %b8
b15:
	%r149 = load i32, i32* %r99
	%r150 = sub i32 %r226, %r149
	move i32 %r222<- %r150
	br label %b16
b16:
	move i32 %r223<- %r222
	br label %b14
b24:
	move i32 %r224<- 0
	br label %b8
b25:
	move i32 %r226<- 0
	br label %b10
b26:
	move i32 %r225<- 0
	br label %b12
b27:
	move i32 %r223<- %r226
	br label %b14
b28:
	move i32 %r222<- %r226
	br label %b16
}
define dso_local i32 @main() 
{
b20:
	%r192 = call i32 @getint()
	%r195 = call i32 @getint()
	store i32 %r195, i32* @staticvalue
	call void @_sysy_starttime(i32 56)
	move i32 %r228<- %r192
	br label %b21
b21:
	%r202 = icmp sgt i32 %r228, 0
	br i1 %r202, label %b22, label %b23
b22:
	%r205 = sub i32 %r228, 1
	%r207 = call i32 @rand()
	%r208 = srem i32 %r207, 300000
	%r210 = call i32 @rand()
	%r211 = srem i32 %r210, 2
	%r213 = getelementptr inbounds [10000 x i32], [10000 x i32]* @a, i32 0, i32 0
	%r216 = call i32 @set(i32* %r213, i32 %r208, i32 %r211)
	move i32 %r228<- %r205
	br label %b21
b23:
	call void @_sysy_stoptime(i32 64)
	%r219 = getelementptr inbounds [10000 x i32], [10000 x i32]* @a, i32 0, i32 0
	call void @putarray(i32 10000, i32* %r219)
	ret i32 0
}
define dso_local i32 @rand() 
{
b17:
	%r168 = load i32, i32* @staticvalue
	%r169 = getelementptr inbounds [3 x i32], [3 x i32]* @seed, i32 0, i32 0
	%r170 = load i32, i32* %r169
	%r171 = mul i32 %r168, %r170
	%r172 = getelementptr inbounds [3 x i32], [3 x i32]* @seed, i32 0, i32 1
	%r173 = load i32, i32* %r172
	%r174 = add i32 %r171, %r173
	store i32 %r174, i32* @staticvalue
	%r176 = load i32, i32* @staticvalue
	%r177 = getelementptr inbounds [3 x i32], [3 x i32]* @seed, i32 0, i32 2
	%r178 = load i32, i32* %r177
	%r179 = srem i32 %r176, %r178
	store i32 %r179, i32* @staticvalue
	%r181 = load i32, i32* @staticvalue
	%r182 = icmp slt i32 %r181, 0
	br i1 %r182, label %b18, label %b19
b18:
	%r185 = load i32, i32* %r177
	%r186 = load i32, i32* @staticvalue
	%r187 = add i32 %r185, %r186
	store i32 %r187, i32* @staticvalue
	br label %b19
b19:
	%r190 = load i32, i32* @staticvalue
	ret i32 %r190
}
