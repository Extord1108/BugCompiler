declare i32 @getch()
declare i32 @parallel_start()
declare i32 @getfarray(float* )
declare void @putint(i32 )
declare void @putfarray(i32 , float* )
declare void @starttime(i32 )
declare void @stoptime(i32 )
declare i32 @getarray(i32* )
declare void @memset(i32* , i32 , i32 )
declare i32 @getint()
declare void @putarray(i32 , i32* )
declare void @putfloat(float )
declare void @putch(i32 )
declare float @getfloat()
declare void @parallel_end(i32 )
define dso_local i32 @main() 
{
b1:
	%r0 = alloca [100 x float]
	%r1 = getelementptr inbounds [100 x float], [100 x float]* %r0, i32 0, i32 0
	%r2 = bitcast %r1 to i32*
	call void @memset(i32* %r2, i32 0, i32 400)
	%r4 = sitofp i32 1 to float
	store float %r4, float* %r1
	%r6 = getelementptr inbounds float, float* %r1, i32 1
	%r7 = sitofp i32 2 to float
	store float %r7, float* %r6
	%r9 = getelementptr inbounds float, float* %r1, i32 2
	%r10 = sitofp i32 3 to float
	store float %r10, float* %r9
	ret i32 0
}
