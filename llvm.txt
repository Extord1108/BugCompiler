@size = dso_local global [10 x i32] zeroinitializer
@to = dso_local global [10 x [10 x i32]] zeroinitializer
@cap = dso_local global [10 x [10 x i32]] zeroinitializer
@rev = dso_local global [10 x [10 x i32]] zeroinitializer
@used = dso_local global [10 x i32] zeroinitializer
declare i32 @getch()
declare i32 @getfarray(float* )
declare void @putint(i32 )
declare void @putfarray(i32 , float* )
declare void @starttime(i32 )
declare void @stoptime(i32 )
declare i32 @getarray(i32* )
declare void @memset(i32* , i32 , i32 )
declare i32 @getint()
declare void @putarray(i32 , i32* )
declare void @putfloat(float )
declare void @putch(i32 )
declare float @getfloat()
declare void @_sysy_starttime(i32 )
declare void @_sysy_stoptime(i32 )
define dso_local void @my_memset(i32* %f0, i32 %f1, i32 %f2) 
{
b1:
	move i32 %r430<- 0
	br label %b2
b2:
	%r14 = icmp slt i32 %r430, %f2
	br i1 %r14, label %b3, label %b4
b3:
	%r18 = getelementptr inbounds i32, i32* %f0, i32 0
	%r19 = mul i32 %r430, 1
	%r20 = add i32 0, %r19
	%r21 = getelementptr inbounds i32, i32* %r18, i32 %r20
	store i32 %f1, i32* %r21
	%r25 = add i32 %r430, 1
	move i32 %r430<- %r25
	br label %b2
b4:
	ret void
}
define dso_local i32 @max_flow(i32 %f361, i32 %f362) 
{
b21:
	move i32 %r433<- 0
	br label %b22
b22:
	br label %b23
b23:
	%r372 = getelementptr inbounds [10 x i32], [10 x i32]* @used, i32 0, i32 0
	call void @my_memset(i32* %r372, i32 0, i32 10)
	%r376 = call i32 @dfs(i32 %f361, i32 %f362, i32 1879048192)
	%r380 = icmp eq i32 %r376, 0
	br i1 %r380, label %b25, label %b26
b25:
	ret i32 %r433
b26:
	%r387 = add i32 %r433, %r376
	call void @putint(i32 %r387)
	call void @putch(i32 10)
	move i32 %r433<- %r387
	br label %b22
}
define dso_local i32 @main() 
{
b27:
	%r396 = call i32 @getint()
	%r398 = call i32 @getint()
	%r400 = getelementptr inbounds [10 x i32], [10 x i32]* @size, i32 0, i32 0
	call void @my_memset(i32* %r400, i32 0, i32 10)
	move i32 %r436<- %r398
	br label %b28
b28:
	%r404 = icmp sgt i32 %r436, 0
	br i1 %r404, label %b29, label %b30
b29:
	%r408 = call i32 @getint()
	%r410 = call i32 @getint()
	%r412 = call i32 @getint()
	call void @add_node(i32 %r408, i32 %r410, i32 %r412)
	%r420 = sub i32 %r436, 1
	move i32 %r436<- %r420
	br label %b28
b30:
	%r424 = call i32 @max_flow(i32 1, i32 %r396)
	call void @putint(i32 %r424)
	call void @putch(i32 10)
	ret i32 0
}
define dso_local i32 @dfs(i32 %f164, i32 %f165, i32 %f166) 
{
b6:
	%r175 = icmp eq i32 %f164, %f165
	br i1 %r175, label %b7, label %b8
b7:
	ret i32 %f166
b8:
	%r181 = getelementptr inbounds [10 x i32], [10 x i32]* @used, i32 0, i32 0
	%r182 = mul i32 %f164, 1
	%r183 = add i32 0, %r182
	%r184 = getelementptr inbounds i32, i32* %r181, i32 %r183
	store i32 1, i32* %r184
	call void @putarray(i32 10, i32* %r181)
	move i32 %r449<- 0
	br label %b9
b9:
	%r193 = getelementptr inbounds [10 x i32], [10 x i32]* @size, i32 0, i32 0
	%r196 = getelementptr inbounds i32, i32* %r193, i32 %r183
	%r197 = load i32, i32* %r196
	%r198 = icmp slt i32 %r449, %r197
	br i1 %r198, label %b10, label %b11
b10:
	%r202 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @to, i32 0, i32 0, i32 0
	%r203 = mul i32 %f164, 10
	%r204 = add i32 0, %r203
	%r205 = mul i32 %r449, 1
	%r206 = add i32 %r204, %r205
	%r207 = getelementptr inbounds i32, i32* %r202, i32 %r206
	%r208 = load i32, i32* %r207
	%r210 = mul i32 %r208, 1
	%r211 = add i32 0, %r210
	%r212 = getelementptr inbounds i32, i32* %r181, i32 %r211
	%r213 = load i32, i32* %r212
	%r214 = icmp ne i32 %r213, 0
	br i1 %r214, label %b12, label %b13
b11:
	ret i32 0
b12:
	%r217 = add i32 %r449, 1
	move i32 %r449<- %r217
	br label %b9
b13:
	%r223 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @cap, i32 0, i32 0, i32 0
	%r228 = getelementptr inbounds i32, i32* %r223, i32 %r206
	%r229 = load i32, i32* %r228
	%r230 = icmp sle i32 %r229, 0
	br i1 %r230, label %b14, label %b15
b14:
	%r233 = add i32 %r449, 1
	move i32 %r449<- %r233
	br label %b9
b15:
	%r247 = load i32, i32* %r228
	%r248 = icmp slt i32 %f166, %r247
	br i1 %r248, label %b16, label %b17
b16:
	move i32 %r439<- %f166
	br label %b18
b17:
	%r261 = load i32, i32* %r228
	move i32 %r439<- %r261
	br label %b18
b18:
	%r272 = load i32, i32* %r207
	%r275 = call i32 @dfs(i32 %r272, i32 %f165, i32 %r439)
	%r279 = icmp sgt i32 %r275, 0
	br i1 %r279, label %b19, label %b20
b19:
	%r297 = load i32, i32* %r228
	%r299 = sub i32 %r297, %r275
	store i32 %r299, i32* %r228
	%r309 = load i32, i32* %r207
	%r312 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @rev, i32 0, i32 0, i32 0
	%r317 = getelementptr inbounds i32, i32* %r312, i32 %r206
	%r318 = load i32, i32* %r317
	%r320 = mul i32 %r309, 10
	%r321 = add i32 0, %r320
	%r322 = mul i32 %r318, 1
	%r323 = add i32 %r321, %r322
	%r324 = getelementptr inbounds i32, i32* %r223, i32 %r323
	%r333 = load i32, i32* %r207
	%r342 = load i32, i32* %r317
	%r344 = mul i32 %r333, 10
	%r345 = add i32 0, %r344
	%r346 = mul i32 %r342, 1
	%r347 = add i32 %r345, %r346
	%r348 = getelementptr inbounds i32, i32* %r223, i32 %r347
	%r349 = load i32, i32* %r348
	%r351 = add i32 %r349, %r275
	store i32 %r351, i32* %r324
	ret i32 %r275
b20:
	%r357 = add i32 %r449, 1
	move i32 %r449<- %r357
	br label %b9
}
define dso_local void @add_node(i32 %f29, i32 %f30, i32 %f31) 
{
b5:
	%r40 = getelementptr inbounds [10 x i32], [10 x i32]* @size, i32 0, i32 0
	%r41 = mul i32 %f29, 1
	%r42 = add i32 0, %r41
	%r43 = getelementptr inbounds i32, i32* %r40, i32 %r42
	%r44 = load i32, i32* %r43
	%r45 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @to, i32 0, i32 0, i32 0
	%r46 = mul i32 %f29, 10
	%r47 = add i32 0, %r46
	%r48 = mul i32 %r44, 1
	%r49 = add i32 %r47, %r48
	%r50 = getelementptr inbounds i32, i32* %r45, i32 %r49
	store i32 %f30, i32* %r50
	%r59 = load i32, i32* %r43
	%r60 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @cap, i32 0, i32 0, i32 0
	%r63 = mul i32 %r59, 1
	%r64 = add i32 %r47, %r63
	%r65 = getelementptr inbounds i32, i32* %r60, i32 %r64
	store i32 %f31, i32* %r65
	%r74 = load i32, i32* %r43
	%r75 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @rev, i32 0, i32 0, i32 0
	%r78 = mul i32 %r74, 1
	%r79 = add i32 %r47, %r78
	%r80 = getelementptr inbounds i32, i32* %r75, i32 %r79
	%r83 = mul i32 %f30, 1
	%r84 = add i32 0, %r83
	%r85 = getelementptr inbounds i32, i32* %r40, i32 %r84
	%r86 = load i32, i32* %r85
	store i32 %r86, i32* %r80
	%r94 = load i32, i32* %r85
	%r96 = mul i32 %f30, 10
	%r97 = add i32 0, %r96
	%r98 = mul i32 %r94, 1
	%r99 = add i32 %r97, %r98
	%r100 = getelementptr inbounds i32, i32* %r45, i32 %r99
	store i32 %f29, i32* %r100
	%r109 = load i32, i32* %r85
	%r113 = mul i32 %r109, 1
	%r114 = add i32 %r97, %r113
	%r115 = getelementptr inbounds i32, i32* %r60, i32 %r114
	store i32 0, i32* %r115
	%r123 = load i32, i32* %r85
	%r127 = mul i32 %r123, 1
	%r128 = add i32 %r97, %r127
	%r129 = getelementptr inbounds i32, i32* %r75, i32 %r128
	%r135 = load i32, i32* %r43
	store i32 %r135, i32* %r129
	%r147 = load i32, i32* %r43
	%r148 = add i32 %r147, 1
	store i32 %r148, i32* %r43
	%r160 = load i32, i32* %r85
	%r161 = add i32 %r160, 1
	store i32 %r161, i32* %r85
	ret void
}
