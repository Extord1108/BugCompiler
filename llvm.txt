@size = dso_local global [10 x i32] zeroinitializer
@to = dso_local global [10 x [10 x i32]] zeroinitializer
@cap = dso_local global [10 x [10 x i32]] zeroinitializer
@rev = dso_local global [10 x [10 x i32]] zeroinitializer
@used = dso_local global [10 x i32] zeroinitializer
declare i32 @getch()
declare i32 @getfarray(float* )
declare void @putint(i32 )
declare void @putfarray(i32 , float* )
declare void @starttime(i32 )
declare void @stoptime(i32 )
declare i32 @getarray(i32* )
declare void @memset(i32* , i32 , i32 )
declare i32 @getint()
declare void @putarray(i32 , i32* )
declare void @putfloat(float )
declare void @putch(i32 )
declare float @getfloat()
declare void @_sysy_starttime(i32 )
declare void @_sysy_stoptime(i32 )
define dso_local i32 @max_flow(i32 %f216, i32 %f217) 
{
b21:
	move i32 %r285<- 0
	br label %b22
b22:
	br label %b23
b23:
	%r227 = getelementptr inbounds [10 x i32], [10 x i32]* @used, i32 0, i32 0
	br label %b32
b32:
	move i32 %r307<- 0
	br label %b33
b33:
	%r308 = icmp slt i32 %r307, 10
	br i1 %r308, label %b34, label %b35
b34:
	%r311 = getelementptr inbounds i32, i32* %r227, i32 %r307
	store i32 0, i32* %r311
	%r313 = add i32 %r307, 1
	move i32 %r307<- %r313
	br label %b33
b35:
	br label %b31
b31:
	%r231 = call i32 @dfs(i32 %f216, i32 %f217, i32 1879048192)
	%r235 = icmp eq i32 %r231, 0
	br i1 %r235, label %b25, label %b26
b25:
	ret i32 %r285
b26:
	%r242 = add i32 %r285, %r231
	move i32 %r285<- %r242
	br label %b22
}
define dso_local i32 @main() 
{
b27:
	%r248 = call i32 @getint()
	%r250 = call i32 @getint()
	%r252 = getelementptr inbounds [10 x i32], [10 x i32]* @size, i32 0, i32 0
	br label %b37
b37:
	move i32 %r321<- 0
	br label %b38
b38:
	%r322 = icmp slt i32 %r321, 10
	br i1 %r322, label %b39, label %b40
b39:
	%r325 = getelementptr inbounds i32, i32* %r252, i32 %r321
	store i32 0, i32* %r325
	%r327 = add i32 %r321, 1
	move i32 %r321<- %r327
	br label %b38
b40:
	br label %b36
b36:
	move i32 %r288<- %r250
	br label %b28
b28:
	%r256 = icmp sgt i32 %r288, 0
	br i1 %r256, label %b29, label %b30
b29:
	%r260 = call i32 @getint()
	%r262 = call i32 @getint()
	%r264 = call i32 @getint()
	br label %b42
b42:
	%r333 = getelementptr inbounds [10 x i32], [10 x i32]* @size, i32 0, i32 %r260
	%r334 = load i32, i32* %r333
	%r335 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @to, i32 0, i32 %r260, i32 %r334
	store i32 %r262, i32* %r335
	%r338 = load i32, i32* %r333
	%r339 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @cap, i32 0, i32 %r260, i32 %r338
	store i32 %r264, i32* %r339
	%r342 = load i32, i32* %r333
	%r343 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @rev, i32 0, i32 %r260, i32 %r342
	%r344 = getelementptr inbounds [10 x i32], [10 x i32]* @size, i32 0, i32 %r262
	%r345 = load i32, i32* %r344
	store i32 %r345, i32* %r343
	%r348 = load i32, i32* %r344
	%r349 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @to, i32 0, i32 %r262, i32 %r348
	store i32 %r260, i32* %r349
	%r352 = load i32, i32* %r344
	%r353 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @cap, i32 0, i32 %r262, i32 %r352
	store i32 0, i32* %r353
	%r356 = load i32, i32* %r344
	%r357 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @rev, i32 0, i32 %r262, i32 %r356
	%r359 = load i32, i32* %r333
	store i32 %r359, i32* %r357
	%r363 = load i32, i32* %r333
	%r364 = add i32 %r363, 1
	store i32 %r364, i32* %r333
	%r368 = load i32, i32* %r344
	%r369 = add i32 %r368, 1
	store i32 %r369, i32* %r344
	br label %b41
b41:
	%r272 = sub i32 %r288, 1
	move i32 %r288<- %r272
	br label %b28
b30:
	%r276 = call i32 @max_flow(i32 1, i32 %r248)
	call void @putint(i32 %r276)
	call void @putch(i32 10)
	ret i32 0
}
define dso_local i32 @dfs(i32 %f95, i32 %f96, i32 %f97) 
{
b6:
	%r106 = icmp eq i32 %f95, %f96
	br i1 %r106, label %b7, label %b8
b7:
	ret i32 %f97
b8:
	%r112 = getelementptr inbounds [10 x i32], [10 x i32]* @used, i32 0, i32 %f95
	store i32 1, i32* %r112
	move i32 %r301<- 0
	br label %b9
b9:
	%r119 = getelementptr inbounds [10 x i32], [10 x i32]* @size, i32 0, i32 %f95
	%r120 = load i32, i32* %r119
	%r121 = icmp slt i32 %r301, %r120
	br i1 %r121, label %b10, label %b11
b10:
	%r125 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @to, i32 0, i32 %f95, i32 %r301
	%r126 = load i32, i32* %r125
	%r127 = getelementptr inbounds [10 x i32], [10 x i32]* @used, i32 0, i32 %r126
	%r128 = load i32, i32* %r127
	%r129 = icmp ne i32 %r128, 0
	br i1 %r129, label %b12, label %b13
b11:
	ret i32 0
b12:
	%r132 = add i32 %r301, 1
	move i32 %r301<- %r132
	br label %b9
b13:
	%r138 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @cap, i32 0, i32 %f95, i32 %r301
	%r139 = load i32, i32* %r138
	%r140 = icmp sle i32 %r139, 0
	br i1 %r140, label %b14, label %b15
b14:
	%r143 = add i32 %r301, 1
	move i32 %r301<- %r143
	br label %b9
b15:
	%r152 = load i32, i32* %r138
	%r153 = icmp slt i32 %f97, %r152
	br i1 %r153, label %b16, label %b17
b16:
	move i32 %r291<- %f97
	br label %b18
b17:
	%r161 = load i32, i32* %r138
	move i32 %r291<- %r161
	br label %b18
b18:
	%r167 = load i32, i32* %r125
	%r170 = call i32 @dfs(i32 %r167, i32 %f96, i32 %r291)
	%r174 = icmp sgt i32 %r170, 0
	br i1 %r174, label %b19, label %b20
b19:
	%r182 = load i32, i32* %r138
	%r184 = sub i32 %r182, %r170
	store i32 %r184, i32* %r138
	%r189 = load i32, i32* %r125
	%r192 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @rev, i32 0, i32 %f95, i32 %r301
	%r193 = load i32, i32* %r192
	%r194 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @cap, i32 0, i32 %r189, i32 %r193
	%r198 = load i32, i32* %r125
	%r202 = load i32, i32* %r192
	%r203 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @cap, i32 0, i32 %r198, i32 %r202
	%r204 = load i32, i32* %r203
	%r206 = add i32 %r204, %r170
	store i32 %r206, i32* %r194
	ret i32 %r170
b20:
	%r212 = add i32 %r301, 1
	move i32 %r301<- %r212
	br label %b9
}
