@INF = dso_local global i32 1879048192
@size = dso_local global [10 x i32] zeroinitializer
@to = dso_local global [10 x [10 x i32]] zeroinitializer
@cap = dso_local global [10 x [10 x i32]] zeroinitializer
@rev = dso_local global [10 x [10 x i32]] zeroinitializer
@used = dso_local global [10 x i32] zeroinitializer
declare i32 @getch()
declare i32 @parallel_start()
declare i32 @getfarray(float* )
declare void @putint(i32 )
declare void @putfarray(i32 , float* )
declare void @starttime(i32 )
declare void @stoptime(i32 )
declare i32 @getarray(i32* )
declare void @memset(i32* , i32 , i32 )
declare i32 @getint()
declare void @putarray(i32 , i32* )
declare void @putfloat(float )
declare void @putch(i32 )
declare float @getfloat()
declare void @parallel_end(i32 )
define dso_local void @my_memset(i32* %f0, i32 %f1, i32 %f2) 
{
b1:
	move i32 %r286<- 0
	br label %b2
b2:
	%r14 = icmp slt i32 %r286, %f2
	br i1 %r14, label %b3, label %b4
b3:
	%r18 = getelementptr inbounds i32, i32* %f0, i32 %r286
	store i32 %f1, i32* %r18
	%r22 = add i32 %r286, 1
	move i32 %r286<- %r22
	br label %b2
b4:
	ret void
}
define dso_local i32 @max_flow(i32 %f216, i32 %f217) 
{
b21:
	move i32 %r287<- 0
	br label %b22
b22:
	%r225 = icmp ne i32 1, 0
	br i1 %r225, label %b23, label %b24
b23:
	%r227 = getelementptr inbounds [10 x i32], [10 x i32]* @used, i32 0, i32 0
	call void @my_memset(i32* %r227, i32 0, i32 10)
	%r231 = call i32 @dfs(i32 %f216, i32 %f217, i32 1879048192)
	%r235 = icmp eq i32 %r231, 0
	br i1 %r235, label %b25, label %b26
b24:
	ret i32 0
b25:
	ret i32 %r287
b26:
	%r242 = add i32 %r287, %r231
	move i32 %r287<- %r242
	br label %b22
}
define dso_local i32 @main() 
{
b27:
	%r248 = call i32 @getint()
	%r250 = call i32 @getint()
	%r252 = getelementptr inbounds [10 x i32], [10 x i32]* @size, i32 0, i32 0
	call void @my_memset(i32* %r252, i32 0, i32 10)
	call void @putint(i32 1)
	call void @putch(i32 10)
	move i32 %r288<- %r250
	br label %b28
b28:
	%r258 = icmp sgt i32 %r288, 0
	br i1 %r258, label %b29, label %b30
b29:
	%r262 = call i32 @getint()
	%r264 = call i32 @getint()
	%r266 = call i32 @getint()
	call void @putint(i32 2)
	call void @putch(i32 10)
	call void @add_node(i32 %r262, i32 %r264, i32 %r266)
	%r276 = sub i32 %r288, 1
	move i32 %r288<- %r276
	br label %b28
b30:
	call void @putint(i32 3)
	call void @putch(i32 10)
	%r282 = call i32 @max_flow(i32 1, i32 %r248)
	call void @putint(i32 %r282)
	call void @putch(i32 10)
	ret i32 0
}
define dso_local i32 @dfs(i32 %f95, i32 %f96, i32 %f97) 
{
b6:
	%r106 = icmp eq i32 %f95, %f96
	br i1 %r106, label %b7, label %b8
b7:
	ret i32 %f97
b8:
	%r112 = getelementptr inbounds [10 x i32], [10 x i32]* @used, i32 0, i32 %f95
	store i32 1, i32* %r112
	move i32 %r291<- 0
	br label %b9
b9:
	%r119 = getelementptr inbounds [10 x i32], [10 x i32]* @size, i32 0, i32 %f95
	%r120 = load i32, i32* %r119
	%r121 = icmp slt i32 %r291, %r120
	br i1 %r121, label %b10, label %b11
b10:
	%r125 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @to, i32 0, i32 %f95, i32 %r291
	%r126 = load i32, i32* %r125
	%r127 = getelementptr inbounds [10 x i32], [10 x i32]* @used, i32 0, i32 %r126
	%r128 = load i32, i32* %r127
	%r129 = icmp ne i32 %r128, 0
	br i1 %r129, label %b12, label %b13
b11:
	ret i32 0
b12:
	%r132 = add i32 %r291, 1
	move i32 %r291<- %r132
	br label %b9
b13:
	%r138 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @cap, i32 0, i32 %f95, i32 %r291
	%r139 = load i32, i32* %r138
	%r140 = icmp sle i32 %r139, 0
	br i1 %r140, label %b14, label %b15
b14:
	%r143 = add i32 %r291, 1
	move i32 %r291<- %r143
	br label %b9
b15:
	%r151 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @cap, i32 0, i32 %f95, i32 %r291
	%r152 = load i32, i32* %r151
	%r153 = icmp slt i32 %f97, %r152
	br i1 %r153, label %b16, label %b17
b16:
	move i32 %r289<- %f97
	br label %b18
b17:
	%r160 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @cap, i32 0, i32 %f95, i32 %r291
	%r161 = load i32, i32* %r160
	move i32 %r289<- %r161
	br label %b18
b18:
	%r166 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @to, i32 0, i32 %f95, i32 %r291
	%r167 = load i32, i32* %r166
	%r170 = call i32 @dfs(i32 %r167, i32 %f96, i32 %r289)
	%r174 = icmp sgt i32 %r170, 0
	br i1 %r174, label %b19, label %b20
b19:
	%r178 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @cap, i32 0, i32 %f95, i32 %r291
	%r181 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @cap, i32 0, i32 %f95, i32 %r291
	%r182 = load i32, i32* %r181
	%r184 = sub i32 %r182, %r170
	store i32 %r184, i32* %r178
	%r188 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @to, i32 0, i32 %f95, i32 %r291
	%r189 = load i32, i32* %r188
	%r192 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @rev, i32 0, i32 %f95, i32 %r291
	%r193 = load i32, i32* %r192
	%r194 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @cap, i32 0, i32 %r189, i32 %r193
	%r197 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @to, i32 0, i32 %f95, i32 %r291
	%r198 = load i32, i32* %r197
	%r201 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @rev, i32 0, i32 %f95, i32 %r291
	%r202 = load i32, i32* %r201
	%r203 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @cap, i32 0, i32 %r198, i32 %r202
	%r204 = load i32, i32* %r203
	%r206 = add i32 %r204, %r170
	store i32 %r206, i32* %r194
	ret i32 %r170
b20:
	%r212 = add i32 %r291, 1
	move i32 %r291<- %r212
	move i32 %r290<- %r289
	br label %b9
}
define dso_local void @add_node(i32 %f26, i32 %f27, i32 %f28) 
{
b5:
	%r37 = getelementptr inbounds [10 x i32], [10 x i32]* @size, i32 0, i32 %f26
	%r38 = load i32, i32* %r37
	%r39 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @to, i32 0, i32 %f26, i32 %r38
	store i32 %f27, i32* %r39
	%r44 = getelementptr inbounds [10 x i32], [10 x i32]* @size, i32 0, i32 %f26
	%r45 = load i32, i32* %r44
	%r46 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @cap, i32 0, i32 %f26, i32 %r45
	store i32 %f28, i32* %r46
	%r51 = getelementptr inbounds [10 x i32], [10 x i32]* @size, i32 0, i32 %f26
	%r52 = load i32, i32* %r51
	%r53 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @rev, i32 0, i32 %f26, i32 %r52
	%r55 = getelementptr inbounds [10 x i32], [10 x i32]* @size, i32 0, i32 %f27
	%r56 = load i32, i32* %r55
	store i32 %r56, i32* %r53
	%r60 = getelementptr inbounds [10 x i32], [10 x i32]* @size, i32 0, i32 %f27
	%r61 = load i32, i32* %r60
	%r62 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @to, i32 0, i32 %f27, i32 %r61
	store i32 %f26, i32* %r62
	%r67 = getelementptr inbounds [10 x i32], [10 x i32]* @size, i32 0, i32 %f27
	%r68 = load i32, i32* %r67
	%r69 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @cap, i32 0, i32 %f27, i32 %r68
	store i32 0, i32* %r69
	%r73 = getelementptr inbounds [10 x i32], [10 x i32]* @size, i32 0, i32 %f27
	%r74 = load i32, i32* %r73
	%r75 = getelementptr inbounds [10 x [10 x i32]], [10 x [10 x i32]]* @rev, i32 0, i32 %f27, i32 %r74
	%r77 = getelementptr inbounds [10 x i32], [10 x i32]* @size, i32 0, i32 %f26
	%r78 = load i32, i32* %r77
	store i32 %r78, i32* %r75
	%r81 = getelementptr inbounds [10 x i32], [10 x i32]* @size, i32 0, i32 %f26
	%r83 = getelementptr inbounds [10 x i32], [10 x i32]* @size, i32 0, i32 %f26
	%r84 = load i32, i32* %r83
	%r85 = add i32 %r84, 1
	store i32 %r85, i32* %r81
	%r88 = getelementptr inbounds [10 x i32], [10 x i32]* @size, i32 0, i32 %f27
	%r90 = getelementptr inbounds [10 x i32], [10 x i32]* @size, i32 0, i32 %f27
	%r91 = load i32, i32* %r90
	%r92 = add i32 %r91, 1
	store i32 %r92, i32* %r88
	ret void
}
