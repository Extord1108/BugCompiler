declare i32 @getch()
declare i32 @parallel_start()
declare i32 @getfarray(float* )
declare void @putint(i32 )
declare void @putfarray(i32 , float* )
declare void @starttime(i32 )
declare void @stoptime(i32 )
declare i32 @getarray(i32* )
declare void @memset(i32* , i32 , i32 )
declare i32 @getint()
declare void @putarray(i32 , i32* )
declare void @putfloat(float )
declare void @putch(i32 )
declare float @getfloat()
declare void @parallel_end(i32 )
define dso_local i32 @main() 
{
b1:
	%r10 = alloca i32
	%r8 = alloca i32
	%r6 = alloca i32
	%r4 = alloca i32
	%r2 = alloca i32
	%r0 = alloca i32
	store i32 1, i32* %r0
	store i32 2, i32* %r2
	store i32 3, i32* %r4
	store i32 4, i32* %r6
	store i32 5, i32* %r8
	store i32 6, i32* %r10
	%r12 = mul i32 1, 2
	%r13 = add i32 %r12, 3
	%r14 = icmp slt i32 %r13, 6
	br i1 %r14, label %b5, label %b3
b2:
	%r18 = icmp ne i32 5, 0
	br i1 %r18, label %b6, label %b9
b3:
	ret i32 1
	br label %b4
b4:
	ret i32 0
b5:
	%r16 = icmp ne i32 4, 0
	br i1 %r16, label %b2, label %b3
b6:
	%r25 = icmp eq i32 3, 2
	br i1 %r25, label %b13, label %b11
b7:
	ret i32 2
	br label %b8
b8:
	br label %b4
b9:
	%r20 = icmp eq i32 1, 0
	%r21 = zext i1 %r20 to i32
	%r22 = add i32 %r21, 0
	%r23 = icmp ne i32 %r22, 0
	br i1 %r23, label %b6, label %b7
b10:
	ret i32 3
	br label %b12
b11:
	%r32 = srem i32 6, 3
	%r33 = icmp ne i32 %r32, 0
	br i1 %r33, label %b17, label %b15
b12:
	br label %b8
b13:
	%r27 = add i32 4, 5
	%r28 = icmp sgt i32 %r27, 2
	br i1 %r28, label %b10, label %b11
b14:
	ret i32 4
	br label %b16
b15:
	%r39 = sdiv i32 4, 2
	%r40 = add i32 %r39, 1
	%r41 = icmp sge i32 %r40, 2
	br i1 %r41, label %b18, label %b19
b16:
	br label %b12
b17:
	%r35 = icmp ne i32 5, 0
	br i1 %r35, label %b14, label %b15
b18:
	%r43 = sub i32 5, 6
	%r44 = icmp sge i32 %r43, 0
	br i1 %r44, label %b21, label %b24
b19:
	ret i32 5
	br label %b20
b20:
	br label %b16
b21:
	ret i32 6
	br label %b23
b22:
	%r50 = icmp ne i32 3, 6
	br i1 %r50, label %b25, label %b26
b23:
	br label %b20
b24:
	%r46 = icmp sgt i32 4, 4
	br i1 %r46, label %b21, label %b22
b25:
	%r52 = mul i32 5, 4
	%r53 = add i32 2, %r52
	%r54 = icmp sgt i32 %r53, 10
	br i1 %r54, label %b28, label %b29
b26:
	ret i32 7
	br label %b27
b27:
	br label %b23
b28:
	%r56 = icmp eq i32 6, 0
	br i1 %r56, label %b31, label %b32
b29:
	ret i32 8
	br label %b30
b30:
	br label %b27
b31:
	ret i32 9
	br label %b33
b32:
	ret i32 10
	br label %b33
b33:
	br label %b30
}
