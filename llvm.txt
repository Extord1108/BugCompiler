@g = dso_local global i32 0
@h = dso_local global i32 0
@f = dso_local global i32 0
@e = dso_local global i32 0
declare i32 @getch()
declare i32 @parallel_start()
declare i32 @getfarray(float* )
declare void @putint(i32 )
declare void @putfarray(i32 , float* )
declare void @starttime(i32 )
declare void @stoptime(i32 )
declare i32 @getarray(i32* )
declare void @memset(i32* , i32 , i32 )
declare i32 @getint()
declare void @putarray(i32 , i32* )
declare void @putfloat(float )
declare void @putch(i32 )
declare float @getfloat()
declare void @parallel_end(i32 )
define dso_local i32 @EightWhile() 
{
b1:
	%r6 = alloca i32
	%r3 = alloca i32
	%r2 = alloca i32
	%r0 = alloca i32
	store i32 5, i32* %r0
	store i32 6, i32* %r2
	store i32 7, i32* %r3
	store i32 10, i32* %r6
	br label %b2
b2:
	%r9 = load i32, i32* %r0
	%r10 = icmp slt i32 %r9, 20
	br i1 %r10, label %b3, label %b4
b3:
	%r12 = load i32, i32* %r0
	%r13 = add i32 %r12, 3
	store i32 %r13, i32* %r0
	br label %b5
b4:
	%r93 = load i32, i32* %r0
	%r94 = load i32, i32* %r2
	%r95 = load i32, i32* %r6
	%r96 = add i32 %r94, %r95
	%r97 = add i32 %r93, %r96
	%r98 = load i32, i32* %r3
	%r99 = add i32 %r97, %r98
	%r100 = load i32, i32* @e
	%r101 = load i32, i32* %r6
	%r102 = add i32 %r100, %r101
	%r103 = load i32, i32* @g
	%r104 = sub i32 %r102, %r103
	%r105 = load i32, i32* @h
	%r106 = add i32 %r104, %r105
	%r107 = sub i32 %r99, %r106
	ret i32 %r107
b5:
	%r16 = load i32, i32* %r2
	%r17 = icmp slt i32 %r16, 10
	br i1 %r17, label %b6, label %b7
b6:
	%r19 = load i32, i32* %r2
	%r20 = add i32 %r19, 1
	store i32 %r20, i32* %r2
	br label %b8
b7:
	%r89 = load i32, i32* %r2
	%r90 = sub i32 %r89, 2
	store i32 %r90, i32* %r2
	br label %b2
b8:
	%r23 = load i32, i32* %r3
	%r24 = icmp eq i32 %r23, 7
	br i1 %r24, label %b9, label %b10
b9:
	%r26 = load i32, i32* %r3
	%r27 = sub i32 %r26, 1
	store i32 %r27, i32* %r3
	br label %b11
b10:
	%r85 = load i32, i32* %r3
	%r86 = add i32 %r85, 1
	store i32 %r86, i32* %r3
	br label %b5
b11:
	%r30 = load i32, i32* %r6
	%r31 = icmp slt i32 %r30, 20
	br i1 %r31, label %b12, label %b13
b12:
	%r33 = load i32, i32* %r6
	%r34 = add i32 %r33, 3
	store i32 %r34, i32* %r6
	br label %b14
b13:
	%r81 = load i32, i32* %r6
	%r82 = sub i32 %r81, 1
	store i32 %r82, i32* %r6
	br label %b8
b14:
	%r37 = load i32, i32* @e
	%r38 = icmp sgt i32 %r37, 1
	br i1 %r38, label %b15, label %b16
b15:
	%r40 = load i32, i32* @e
	%r41 = sub i32 %r40, 1
	store i32 %r41, i32* @e
	br label %b17
b16:
	%r77 = load i32, i32* @e
	%r78 = add i32 %r77, 1
	store i32 %r78, i32* @e
	br label %b11
b17:
	%r44 = load i32, i32* @f
	%r45 = icmp sgt i32 %r44, 2
	br i1 %r45, label %b18, label %b19
b18:
	%r47 = load i32, i32* @f
	%r48 = sub i32 %r47, 2
	store i32 %r48, i32* @f
	br label %b20
b19:
	%r73 = load i32, i32* @f
	%r74 = add i32 %r73, 1
	store i32 %r74, i32* @f
	br label %b14
b20:
	%r51 = load i32, i32* @g
	%r52 = icmp slt i32 %r51, 3
	br i1 %r52, label %b21, label %b22
b21:
	%r54 = load i32, i32* @g
	%r55 = add i32 %r54, 10
	store i32 %r55, i32* @g
	br label %b23
b22:
	%r69 = load i32, i32* @g
	%r70 = sub i32 %r69, 8
	store i32 %r70, i32* @g
	br label %b17
b23:
	%r58 = load i32, i32* @h
	%r59 = icmp slt i32 %r58, 10
	br i1 %r59, label %b24, label %b25
b24:
	%r61 = load i32, i32* @h
	%r62 = add i32 %r61, 8
	store i32 %r62, i32* @h
	br label %b23
b25:
	%r65 = load i32, i32* @h
	%r66 = sub i32 %r65, 1
	store i32 %r66, i32* @h
	br label %b20
}
define dso_local i32 @main() 
{
b26:
	store i32 1, i32* @g
	store i32 2, i32* @h
	store i32 4, i32* @e
	store i32 6, i32* @f
	%r113 = call i32 @EightWhile()
	ret i32 %r113
}
